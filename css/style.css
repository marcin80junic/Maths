/* general settings */
:root {
  font-size: calc(0.5em + 1vw);
  box-sizing: border-box; }

*, ::before, ::after {
  box-sizing: inherit; }

body {
  display: flex;
  -webkit-user-select: none;
  /* Safari */
  -khtml-user-select: none;
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  margin: 0;
  overflow: overlay;
  font-family: "Comic Sans MS", "Monotype Corsiva", cursive;
  background-color: #9efa9e; }

.body-hidden-overflow {
  overflow: hidden; }

body::-webkit-scrollbar,
.sidenav::-webkit-scrollbar,
.test-accordeon-content::-webkit-scrollbar {
  width: 1em; }

body::-webkit-scrollbar-track,
.sidenav::-webkit-scrollbar-track,
.test-accordeon-content::-webkit-scrollbar-track {
  background: #1f7a1f; }

body::-webkit-scrollbar-thumb,
.sidenav::-webkit-scrollbar-thumb,
.test-accordeon-content::-webkit-scrollbar-thumb {
  background-color: red;
  border-radius: .3em;
  border: 0.2em solid #b30000; }

main {
  width: 85%;
  padding: 2em; }

h1, h2, h3, h4, h5, h6 {
  margin-top: 0; }

p {
  text-align: justify;
  line-height: 2em; }

fieldset {
  padding: 1em;
  margin: 1.5em auto;
  border-radius: 10px;
  border-width: medium; }

input, select, button {
  font: inherit;
  font-size: .9em;
  background-color: #4dff4d;
  border: 2px solid rgba(0, 0, 0, 0.3);
  border-radius: 5px;
  box-shadow: 3px 3px 3px rgba(55, 55, 55, 0.5);
  cursor: pointer;
  outline: none; }

button:hover:not(:disabled), input:hover:not(:disabled), select:hover:not(:disabled) {
  background-color: #00e600; }

button:disabled {
  cursor: initial; }

button:focus, input:focus, select:focus {
  background-color: #00e600; }

input:active {
  background-color: #00b300; }

input[type="text"] {
  font-size: .9em;
  text-align: center;
  width: 2.3em;
  background-color: #ffffcc; }

img {
  vertical-align: text-bottom; }

/* end of general settings */
#home .content {
  height: 12em;
  background-image: url("../pics/mathKids.png");
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain; }

/* utility classes */
.center {
  text-align: center;
  align-items: center; }

.left {
  text-align: left; }

.right {
  text-align: right; }

.vertical-center {
  vertical-align: middle; }

.special {
  color: red; }

.correct {
  border: 2px solid #1aff1a; }

.warning {
  border: 2px solid red; }

.invisible {
  visibility: hidden; }

/* end of utility classes */
/* navigation module */
.sidenav {
  display: flex;
  flex-direction: column;
  position: sticky;
  top: 0;
  width: 15%;
  height: 100vh;
  padding: 1em .5em;
  border-radius: .5em;
  background-image: linear-gradient(to bottom, #00b300, #009900); }

.sidenav a {
  display: block;
  padding: .2em .5em;
  text-decoration: none;
  text-align: center;
  color: var(--link-text);
  background-image: linear-gradient(#ef0606, red, #ef0606);
  border: 1px solid rgba(0, 0, 0, 0.5);
  border-radius: .5em;
  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);
  outline: none;
  cursor: pointer; }

.sidenav a + a {
  margin-top: .5em; }

.sidenav a:first-of-type {
  margin-bottom: 1.5em; }

.sidenav a:last-of-type {
  margin-top: auto; }

.sidenav a:hover {
  background-image: linear-gradient(#c61515, #e71818, #c61515); }

.sidenav a:focus {
  border: 1px dotted rgba(0, 0, 0, 0.5); }

.sidenav a:active, .sidenav .selected {
  border: 1px solid rgba(0, 0, 0, 0.5);
  background-image: linear-gradient(#c61515, #e71818, #c61515);
  transform: translateY(2px);
  box-shadow: inset 0 0 0.3em #c61515, inset 0 0.3em 0.7em rgba(0, 0, 0, 0.5); }

.sidenav .selected:not(:active) {
  transform: translateY(1px);
  box-shadow: inset 0 0 0.3em #c61515, inset 0 0.3em 0.7em rgba(0, 0, 0, 0.3); }

.sidenav .mobile-nav {
  display: none; }

/* end of navigation module */
/* menu-toggle module */
@media (max-width: 664px) {
  .sidenav {
    position: absolute;
    top: 0;
    right: 0;
    height: 6em;
    width: 6em;
    background-color: transparent;
    z-index: 1;
    overflow: auto; }
  .sidenav.is-open {
    position: fixed;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background-color: #1f7a1f;
    border-radius: 0; }
  .sidenav .mobile-nav {
    display: block; }
  .sidenav .mobile-title {
    display: none;
    text-align: center; }
  .sidenav.is-open .mobile-title {
    display: block; }
  .mobile-toggle-button {
    display: inline-block;
    position: absolute;
    top: 0.1em;
    right: 0.7em;
    font-size: 3em;
    width: 1em;
    height: 1em;
    line-height: .4em;
    text-indent: 10em;
    white-space: nowrap;
    overflow: hidden; }
  .mobile-toggle-button::after {
    display: block;
    position: absolute;
    top: .2em;
    left: .17em;
    content: "\2261";
    text-indent: 0; }
  .mobile-toggle-button:hover {
    background-color: #009900; }
  .sidenav.is-open .mobile-toggle-button {
    transform: translateY(1px);
    box-shadow: inset 0 0 2px #c61515, inset 0 2px 0.7em rgba(0, 0, 0, 0.3); }
  .sidenav .mobile-toggle-button:active {
    transform: translateY(2px);
    box-shadow: inset 1px 1px 2px #c61515, inset 1px 1px 0.7em rgba(0, 0, 0, 0.3); }
  .sidenav a {
    display: none;
    padding: .8em 1em; }
  .sidenav.is-open a {
    display: block; }
  main {
    width: 100%;
    margin: 0; }
  body {
    overflow: auto; } }

/* end of menu-toggle module */
/* interface module */
.interface {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between; }

.interface > *:not(:last-child) {
  margin-right: 1em; }

.interface-item {
  display: flex;
  padding: .5em 0; }

.interface-item > label {
  margin-right: .5em; }

.interface-item-score {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
  grid-gap: .5em;
  padding: .5em 0; }

.interface-item-score > * > * {
  display: inline-block; }

/* end of interface module */
/* exercises module */
.exercises {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(30%, 12em));
  grid-auto-rows: 1fr;
  grid-row-gap: 1em;
  grid-column-gap: 6em;
  justify-content: center;
  margin: 1em 0 2em; }

.exercises-operation {
  display: flex;
  justify-content: flex-end;
  align-items: center; }

.exercises-operation > * + * {
  margin-left: .2em; }

/* end of exercises module */
/*
Columns

Independent lines of elements aligned to right, laid out in roughly centered columns.
Javascript takes care of adjusting right padding when window is being resized. This keeps
the columns centered.

Add class `columns` to a wrapper container and class `columns-line` to any number of individual
children lines. `columns-line` direct children must not be text nodes - those need to be wrapped into
element nodes.

Markup:
<div class="columns">
    <div class="columns-line">
        <div>20 +</div> 
        <button>butt</button>
        <div>= 6</div>
        <button>dupp</button>
    </div>
    <div class="columns-line">
        <div>20 +</div> 
        <button>butt</button>
        <div>= 6</div>
    </div>
    <div class="columns-line">
        <div>20 +</div> 
        <button>butt</button>
        <div>= 6</div>
    </div>
    <div class="columns-line">
        <div>20 +</div> 
        <button>butt</button>
        <div>= 6</div>
    </div>
    <div class="columns-line">
        <div>20 +</div> 
        <button>butt</button>
        <div>= 6</div>
    </div>
    <div class="columns-line">
        <div>20 +</div> 
        <button>butt</button>
        <div>= 6</div>
    </div>
</div>

Styleguide Layout.Columns
*/
.columns {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(10em, 20em));
  grid-auto-rows: 1fr;
  grid-row-gap: 1em;
  grid-column-gap: 6em;
  justify-content: center; }

.columns-line {
  display: flex;
  flex-wrap: nowrap;
  justify-content: flex-end;
  align-items: center; }

.columns-line > * + * {
  margin-left: 0.3em; }

/* 
Fraction

Displays numbers as a fraction.

Add class `fraction` to a wrapper *div* element, class `numerator` to the first child *div* element 
and `denominator to second one.

Markup:
<div style="text-align:center">
    <div class="fraction">
        <div class="whole">2</div>      // optional
        <div class="fraction-unit">
            <div class="numerator">13</div>
            <div class="denominator">132</div>
        </div>
    </div>
</div>

Styleguide Fraction
*/
.fraction {
  display: flex;
  height: 100%; }

.fraction .whole {
  display: flex;
  align-items: center; }

.fraction .whole:not(:only-of-type) {
  margin-right: 0.1em; }

.fraction .whole input {
  align-self: center;
  width: 1.2em;
  height: 75%; }

.fraction .fraction-unit {
  display: inline-block;
  text-align: center;
  vertical-align: middle;
  font-size: .75em; }

.fraction .fraction-unit input {
  width: 1.9em; }

.fraction .denominator {
  border-top: 2px solid black; }

/*
Tooltip

Tooltip module requires some javascript in order to work. To make it visible the class `showtip`
needs to be added to the `.tiptext` *span* element.

To center tooltip horizontally its *marginLeft* property needs to be assigned at runtime.
The formula to find the margin would be:
*tooltip-target center - tiptext center + 1 + "px"*.

Markup:
<div style="display:flex;justify-content:space-around;">
    <span class="tooltip">
        <button class="tooltip-target">Hover over me</button>
        <span class="tiptext">This is some text to demonstrate the tooltip module</span>
    </span>
    <span class="tooltip">
        <button class="tooltip-target">Hov</button>
        <span class="tiptext">This is some text to demonstrate that tooltip module works with short elements</span>
    </span>
    <span class="tooltip">
        <button class="tooltip-target">Hover over me button, a bit longer just for demonstration</button>
        <span class="tiptext">This is some text to demonstrate that tooltip module works with long elements</span>
    </span>
</div>

Styleguide Tooltip 
*/
.tooltip {
  /* Tooltip container */
  position: relative;
  height: 100%; }

.tiptext {
  visibility: hidden;
  min-width: 10em;
  position: absolute;
  /* Position the tooltip text */
  bottom: 100%;
  left: 0;
  margin-bottom: .5em;
  padding: .5em;
  text-align: justify;
  background-color: beige;
  border: 1px solid grey;
  border-radius: .5em;
  opacity: 0;
  /* Fade in tooltip */
  transition: opacity 0.3s; }

.tooltip .tiptext::after {
  /* Tooltip arrow */
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent; }

.showtip {
  visibility: visible;
  opacity: 1; }

/* button-ladder module */
.button-ladder {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 1em; }

.button-ladder button {
  width: 10em;
  margin-top: 1em;
  padding: .3em;
  border-radius: 10px;
  color: var(--yellow);
  background-color: var(--red-light);
  background-image: url("../pics/unlocked.png");
  background-position: 5%, 50%;
  background-repeat: no-repeat; }

.button-ladder button:disabled {
  opacity: .8;
  background-image: url("../pics/locked.png"); }

.button-ladder button:not(:disabled):hover,
.button-ladder button:focus {
  background-color: var(--red); }

.button-ladder button:not(:disabled):active {
  background-color: var(--red-dark); }

/* end of button-ladder module */
/* test-interface module */
.test-interface > * {
  margin-bottom: 0; }

.test-interface > h2 {
  margin: .3em 0; }

.test-navigation {
  padding-top: 1em;
  text-align: center; }

.test-navigation > button {
  width: 4em; }

.test-navigation > * + * {
  margin-left: 1em; }

/* end of test-interface module */
/* test-accordeon module */
.test-accordeon {
  position: absolute;
  top: 2.5%;
  left: 25%;
  min-width: 57vmax;
  max-width: 57vmax;
  max-height: 95vmin;
  z-index: 1000;
  overflow: hidden;
  background-color: var(--main-bg);
  border: 3px solid grey;
  border-radius: 5px;
  box-shadow: 10px 10px 15px grey; }

.test-accordeon-titlebar {
  display: flex;
  justify-content: space-between;
  padding: .1em;
  background-color: var(--red-dark);
  border-bottom: 2px solid grey; }

.test-accordeon-titlebar > * {
  color: var(--yellow-dark);
  margin: 0; }

.test-accordeon-titlebar-close {
  font: inherit;
  width: 1.5em;
  height: 1.5em;
  line-height: 100%;
  background-color: var(--red-light); }

.test-accordeon-titlebar-title {
  min-width: 1.5em;
  max-width: 1.5em;
  padding: 0 .2em; }

.test-accordeon-content {
  max-height: 88vmin;
  overflow: auto; }

.test-accordeon-section-header {
  width: 100%;
  padding: .4em;
  color: var(--yellow-light);
  background-color: var(--red-light); }

.test-accordeon-section-header:hover:not(:disabled),
.test-accordeon-section-header:focus:not(:disabled) {
  background-color: var(--red); }

.test-accordeon-section-header:active {
  background-color: var(--red-dark); }

.test-accordeon-section-header.selected {
  background-color: var(--red-dark); }

.test-accordeon-section-content {
  margin: .5em;
  padding: .5em;
  border: 2px solid grey;
  border-radius: 10px; }

.test-accordeon-section-content > * {
  margin: 0; }

.dim {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 999;
  background-color: rgba(0, 0, 0, 0.7); }

/* end of accordeon module */
/* settings-group module */
.settings-group {
  display: flex; }

.settings-group div + div {
  margin-top: .3em; }

.settings-group-line {
  display: flex;
  margin: .8em 0;
  padding: .2em;
  border: 2px groove #ffffcc;
  border-radius: .3em; }

.settings-group-line > :first-child {
  min-width: 10em; }

.settings-group-line > :last-child {
  margin-left: auto; }

/* end of settings-group module */
/* checkbox-group module */
.checkbox-group {
  display: flex;
  justify-content: flex-end;
  flex-wrap: wrap; }

.checkbox-group input {
  width: 1em;
  height: 1em; }

.checkbox-group > div {
  min-width: 10em; }

.checkbox-group > .right {
  margin-left: 1em;
  text-align: right; }

/* end of checkbox-group module */
/* custom-radio module */
.custom-radio {
  /* Customize the label (the container) */
  display: inline;
  position: relative;
  padding-left: 30px;
  margin-right: 12px;
  cursor: pointer; }

.custom-radio input {
  /* Hide the browser's default radio button */
  opacity: 0; }

.checkmark {
  /* Create a custom radio button */
  position: absolute;
  top: 2px;
  left: 0;
  height: 1.2em;
  width: 1.2em;
  background-color: #fff;
  border: 1px solid rgba(0, 0, 0, 0.3);
  border-radius: 50%; }

.custom-radio:hover input ~ .checkmark {
  /* On mouse-over, add a grey background color */
  background-color: #ccc; }

.custom-radio input:checked ~ .checkmark {
  /* When the radio button is checked, add a green background */
  background-color: #009900; }

.checkmark:after {
  /* Create the indicator (the dot/circle - hidden when not checked) */
  content: "";
  position: absolute;
  display: none; }

.custom-radio input:checked ~ .checkmark:after {
  /* Show the indicator (dot/circle) when checked */
  display: block; }

.custom-radio input:focus ~ .checkmark,
.custom-radio input:focus ~ .checkmark:after {
  border: 1px groove black; }

.custom-radio .checkmark:after {
  /* Style the indicator (dot/circle) */
  top: .28em;
  left: .28em;
  width: .56em;
  height: .56em;
  border: 1px solid rgba(0, 0, 0, 0.6);
  border-radius: 50%;
  background: white; }

/* end of custom-radio module */
